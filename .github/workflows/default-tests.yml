name: Java CI

on: [push, pull_request]

jobs:
  checkstyle:
    name: Run checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          java-package: jdk
      - name: Run checkstyle with Gradle
        run: ./gradlew clean checkstyleMain checkstyleTest

  test:
    name: Run basic test with Java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    needs: checkstyle
    strategy:
      matrix:
        java_version: [ '11', '12', '13', '14', '15', '16', '17', '18', '19', '20' ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java_version }}
          java-package: jdk
      - name: Build with Gradle
        run: ./gradlew clean build

  integration-test:
    name: Run integration test with Java ${{ matrix.java_version }} and Gradle ${{ matrix.gradle_version }}
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        java_version: ['11']
        gradle_version: [
          '8.1.1'
        ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java_version }}
          java-package: jdk
      - name: Install a test version with Gradle
        run: ./gradlew clean publishToMavenLocal
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: git-commit-id/git-commit-id-gradle-debugging
      - name: Setup Gradle ${{ matrix.gradle_version }}
        run: |
            cd ~/git-commit-id-gradle-debugging
            ./gradle wrapper --gradle-version ${{ matrix.gradle_version }} --distribution-type bin
      - name: Verify Setup of Gradle ${{ matrix.gradle_version }}
        run: ./gradlew -version
      - name: Run the local testversion with Gradle
        run: ./gradlew clean build --rerun-tasks
      - name: Validate if the testversion has produced the desired output
        run: /bin/bash -c '[[ -f build/git.properties ]] && cat build/git.properties || exit 1;'
