name: Java CI

on: [push, pull_request]

jobs:
  checkstyle:
    name: Run checkstyle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
          java-package: jdk
      - name: Run checkstyle with Gradle
        run: ./gradlew clean checkstyleMain checkstyleTest

  test:
    name: Run basic test with Java ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    needs: checkstyle
    strategy:
      matrix:
        java_version: [
          '11',
          # '12', '13', '14', '15', '16', '17', '18', '19', '20'
        ]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java_version }}
          java-package: jdk
      - name: Build with Gradle
        run: ./gradlew clean build

  integration-test:
    name: Run integration test with Java ${{ matrix.java_version }} and Gradle ${{ matrix.gradle_version }}
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        java_version: ['11']
        gradle_version: [
          '8.1.1',
          '8.1',
          '8.0.2',
          '8.0.1',
          '8.0',
          '7.6.1',
          '7.6',
          '7.5.1',
          '7.5',
          '7.4.2',
          '7.4.1',
          '7.4',
          '7.3.3',
          '7.3.2',
          '7.3.1',
          '7.3',
          '7.2',
          '7.1.1',
          '7.1',
          '7.0.2',
          '7.0.1',
          '7.0',
          '6.9.4',
          '6.9.3',
          '6.9.2',
          '6.9.1',
          '6.9',
          '6.8.3',
          '6.8.2',
          '6.8.1',
          '6.8',
          '6.7.1',
          '6.7',
          '6.6.1',
          '6.6',
          '6.5.1',
          '6.5',
          '6.4.1',
          '6.4',
          '6.3',
          '6.2.2',
          '6.2.1',
          '6.2',
          '6.1.1',
          '6.1',
          '6.0.1',
          '6.0',
          '5.6.4',
          '5.6.3',
          '5.6.2',
          '5.6.1',
          '5.6',
          '5.5.1',
          '5.5',
          '5.4.1',
          '5.4',
          '5.3.1',
          '5.3',
          '5.2.1',
          '5.2',
          '5.1',
          # '5.0', # Doesn't support conventions: https://docs.gradle.org/5.1/release-notes.html#specify-a-convention-for-a-property
        ]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java_version }}
          java-package: jdk
      - name: Install a test version with Gradle
        run: ./gradlew clean publishAllPublicationsToLocalPluginRepositoryRepository
      - name: Setup TEMP_DIR
        run: echo "TEMP_DIR=$(mktemp -d --tmpdir=/home/runner/work/git-commit-id-gradle-plugin/git-commit-id-gradle-plugin git-commit-id-gradle-debugging.XXXXXXXXXX)" >> $GITHUB_ENV
      - name: Checkout git-commit-id-gradle-debugging to run actual gradle integration tests
        uses: actions/checkout@v3
        with:
          submodules: recursive
          repository: git-commit-id/git-commit-id-gradle-debugging
          path: ${{env.TEMP_DIR}}
      - name: Setup Gradle ${{ matrix.gradle_version }}
        run: |
            cd "${{env.TEMP_DIR}}"
            ./gradlew wrapper --gradle-version ${{ matrix.gradle_version }} --distribution-type bin
      - name: Verify Setup of Gradle ${{ matrix.gradle_version }}
        run: |
          cd "${{env.TEMP_DIR}}"
          ./gradlew -version
      - name: Run the local testversion with Gradle
        run: |
          cd "${{env.TEMP_DIR}}"
          ./gradlew clean build --rerun-tasks
      - name: Validate if the testversion has produced the desired output
        run: /bin/bash -c '[[ -f "${{env.TEMP_DIR}}"/build/git.properties ]] && cat "${{env.TEMP_DIR}}"/build/git.properties || exit 1;'
