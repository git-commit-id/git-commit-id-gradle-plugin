/*
 * This file is part of git-commit-id-gradle-plugin.
 *
 * git-commit-id-gradle-plugin is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * git-commit-id-gradle-plugin is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with git-commit-id-gradle-plugin.  If not, see <http://www.gnu.org/licenses/>.
 */

package io.github.git.commit.id.gradle.plugin;


import javax.inject.Inject;
import org.gradle.api.file.ProjectLayout;
import org.gradle.api.file.RegularFileProperty;
import org.gradle.api.provider.Property;
import pl.project13.core.CommitIdPropertiesOutputFormat;


/**
 * The {@link GitCommitIdPlugin} comes with a sensible set of default configurations and settings.
 * However, there might be cases where a default doesn't fit your project needs.
 * Gradle allows user to configure with
 * <a href="https://docs.gradle.org/current/userguide/implementing_gradle_plugins.html#modeling_dsl_like_apis">Modeling DSL-like APIs</a>.
 * Perhaps one additional item you need to know about configuration is that the
 * {@link GitCommitIdPlugin} makes use of gradle's
 * <a href="https://docs.gradle.org/current/userguide/lazy_configuration.html">Lazy Configuration</a>
 * which is gradle's way to manage growing build complexity.
 *
 * <p>This Extension exposes all configuration options to configure the settings for
 * the output file that may be generated as part of the plugin execution.
 * This extension is generally only made available through the {@link GitCommitIdPluginExtension}.
 * If you want to learn about the plugin, refer to {@link GitCommitIdPlugin}.
 * If you are interested in the task that generates the actual information refer to
 * {@link GitCommitIdPluginGenerationTask}.
 */
public abstract class GitCommitIdPluginOutputSettingsExtension {
    /**
     * Name of the extension how it's made available to the end-user as
     * DSL like configuration in the {@code build.gradle}:
     * <pre>
     * gitCommitId {
     *     outputSettings {
     *         shouldGenerateOutputFile.set(true)
     *     }
     * }
     * </pre>
     * As may notice this extension is made available as "nested" extension
     * of the {@link GitCommitIdPluginExtension}.
     */
    public static final String NAME = "outputSettings";

    /**
     * Configuration option to enable or disable the generation of an output file.
     * To enable such generation, set this to {@code true}.
     * By default, this setting is disabled (set to {@code false}).
     *
     * <p>To configure the location of the output file refer to
     * {@link #getOutputFile()}, to configure the format (json, properties, ...)
     * of this file refer to {@link #getOutputFormat()}.
     */
    public abstract Property<Boolean> getShouldGenerateOutputFile();

    /**
     * Configuration location of an output file that can be generated by the plugin.
     * Defaults to {@code ${project.getBuildDir()}/git.properties}, formatted as "properties" file.
     *
     * <p>To enable or disable the generation of such output file refer to
     * {@link #getShouldGenerateOutputFile()}, to configure the format (json, properties, ...)
     * of this file refer to {@link #getOutputFormat()}.
     */
    // @OutputFile
    public abstract RegularFileProperty getOutputFile();

    /**
     * Configuration option to enable or disable unicode escaping in the generated properties file.
     *
     * <p>Java has a long history with properties files.
     * Before Java 9, the encoding of a {@code .properties} file is {@code ISO-8859-1}.
     * All non-ASCII characters must be entered by using Unicode escape characters
     * (e.g. {@code \\uHHHH}).
     * In Java 9 and newer, the default encoding specifically for property resource bundles is
     * {@code UTF-8}.
     *
     * <p>To allow various use-cases this plugin allows to configure an automated unicode escaping.
     * Since the core module of this plugin will write the properties file with {@code UTF-8} it is
     * reasonable to assume that generated properties do not need special Unicode escape characters
     * (e.g. {@code \\uHHHH}).
     *
     * <p>Hence by default this setting is set to {@code false}.
     * If you so desire and wish for unicode escaping (e.g. \\u6E2C\\u8A66\\u4E2D\\u6587) you
     * can set this to {@code true}.
     *
     * <p>Only applies if the {@link #getOutputFormat()} is instructed
     * to generate a "properties" file</p>
     */
    public abstract Property<Boolean> getShouldEscapedUnicodeForPropertiesOutput();

    /**
     * Allows to configure the format (json, properties, ...) in which the output file
     * should be saved in.
     * To enable or disable the generation of such properties file refer to
     * {@link #getShouldGenerateOutputFile()} and to configure the location
     * of the properties file refer to {@link #getOutputFile()}.
     *
     * <p>By default will assume that the desired format is "properties".
     */
    public abstract Property<CommitIdPropertiesOutputFormat> getOutputFormat();

    @Inject
    public ProjectLayout getProjectLayout() {
        throw new IllegalStateException("Should have been injected!");
    }

    /**
     * Setup the default values / conventions for the GitCommitIdPluginOutputSettingsExtension.
     */
    @Inject
    public GitCommitIdPluginOutputSettingsExtension() {
        getShouldGenerateOutputFile()
            .convention(false);
        getOutputFile().convention(
            getProjectLayout().getBuildDirectory().file("git.properties"));
        getShouldEscapedUnicodeForPropertiesOutput().convention(false);
        getOutputFormat()
            .convention(CommitIdPropertiesOutputFormat.PROPERTIES);
    }
}
