plugins {
    id 'groovy'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'signing'
    id 'idea'
}

group = 'io.github.git-commit-id'
version = '0.0.1-alpha'

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation 'io.github.git-commit-id:git-commit-id-plugin-core:6.0.0-rc.2'

    // testImplementation 'junit:junit:4.12'
    // testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    // testImplementation "org.junit.platform:junit-platform-suite:1.8.1"
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    testImplementation gradleTestKit()
    testImplementation localGroovy()
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        exceptionFormat "full"
        events "started", "skipped", "passed", "failed"
        showStandardStreams true
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        mavenLocal()
    }
}

signing {
    sign publishing.publications.mavenJava
}

gradlePlugin {
    // Define the plugin
    plugins {
        gitCommitIdPlugin {
            id = 'io.github.git-commit-id.gradle-plugin'
            implementationClass = 'io.github.git.commit.id.gradle.plugin.GitCommitIdPlugin'
        }
    }
}

